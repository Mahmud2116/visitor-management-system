<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visitor Management System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .login-card {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 400px;
        }

        .login-card h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #333;
            font-size: 28px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #555;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e1e1e1;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }

        .btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: #6c757d;
            margin-top: 10px;
        }

        .btn-danger {
            background: #dc3545;
        }

        .btn-success {
            background: #28a745;
        }

        .dashboard {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-top: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #f0f0f0;
        }

        .dashboard-title {
            color: #333;
            font-size: 24px;
            font-weight: 700;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .logout-btn {
            padding: 8px 16px;
            background: #dc3545;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .stat-number {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 8px;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.9;
        }

        .section {
            margin-bottom: 40px;
        }

        .section-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 20px;
            color: #333;
            border-left: 4px solid #667eea;
            padding-left: 15px;
        }

        .visitor-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .visitor-table th {
            background: #f8f9fa;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            color: #555;
            border-bottom: 2px solid #e9ecef;
        }

        .visitor-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #e9ecef;
        }

        .visitor-table tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-expected {
            background: #fff3cd;
            color: #856404;
        }

        .status-checked-in {
            background: #d4edda;
            color: #155724;
        }

        .status-checked-out {
            background: #f8d7da;
            color: #721c24;
        }

        .action-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            margin: 0 2px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            width: 90%;
            max-width: 500px;
            border-radius: 15px;
            position: relative;
        }

        .close {
            position: absolute;
            right: 15px;
            top: 15px;
            font-size: 28px;
            cursor: pointer;
            color: #999;
        }

        .close:hover {
            color: #333;
        }

        .hidden {
            display: none;
        }

        .search-filters {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .search-filters input, .search-filters select {
            padding: 8px 12px;
            border: 2px solid #e1e1e1;
            border-radius: 6px;
            font-size: 14px;
        }

        .role-selector {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-bottom: 30px;
        }

        .role-btn {
            padding: 12px 24px;
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
        }

        .role-btn:hover, .role-btn.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        @media (max-width: 768px) {
            .dashboard-header {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .search-filters {
                flex-direction: column;
            }

            .visitor-table {
                font-size: 12px;
            }

            .visitor-table th, .visitor-table td {
                padding: 8px;
            }
        }
    </style>
</head>
<body>
    <!-- Login Screen -->
    <div id="loginScreen" class="login-container">
        <div class="login-card">
            <h2>Visitor Management System</h2>
            
            <div class="role-selector">
                <div class="role-btn active" onclick="selectRole('staff')">Staff Registration</div>
                <div class="role-btn" onclick="selectRole('security')">Security</div>
                <div class="role-btn" onclick="selectRole('admin')">Admin</div>
            </div>

            <div id="staffLoginSection">
                <form id="staffForm">
                    <div class="form-group">
                        <label for="staffName">Staff Name</label>
                        <input type="text" id="staffName" name="staffName" required>
                    </div>
                    <button type="submit" class="btn">Access Staff Dashboard</button>
                </form>
            </div>

            <div id="credentialLoginSection" class="hidden">
                <form id="loginForm">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" id="username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <button type="submit" class="btn">Login</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Staff Dashboard -->
    <div id="staffDashboard" class="container hidden">
        <div class="dashboard">
            <div class="dashboard-header">
                <h1 class="dashboard-title">Staff Dashboard</h1>
                <div class="user-info">
                    <span>Welcome, <strong id="staffUsername"></strong></span>
                </div>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="totalExpected">0</div>
                    <div class="stat-label">Expected Today</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="checkedIn">0</div>
                    <div class="stat-label">Checked In</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="checkedOut">0</div>
                    <div class="stat-label">Checked Out</div>
                </div>
            </div>

            <div class="section">
                <div class="section-title">Register New Visitor</div>
                <button class="btn" onclick="openModal('registerModal')">Register Visitor</button>
            </div>

            <div class="section">
                <div class="section-title">My Registered Visitors</div>
                <table class="visitor-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Contact</th>
                            <th>Purpose</th>
                            <th>Date/Time</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="staffVisitorList">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Security Dashboard -->
    <div id="securityDashboard" class="container hidden">
        <div class="dashboard">
            <div class="dashboard-header">
                <h1 class="dashboard-title">Security Dashboard</h1>
                <div class="user-info">
                    <span>Welcome, <strong id="securityUsername"></strong></span>
                    <button class="logout-btn" onclick="logout()">Logout</button>
                </div>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="secTotalExpected">0</div>
                    <div class="stat-label">Expected Today</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="secCheckedIn">0</div>
                    <div class="stat-label">Checked In</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="secCheckedOut">0</div>
                    <div class="stat-label">Checked Out</div>
                </div>
            </div>

            <div class="section">
                <div class="section-title">Today's Expected Visitors</div>
                <table class="visitor-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Contact</th>
                            <th>Purpose</th>
                            <th>Staff</th>
                            <th>Expected Time</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="securityVisitorList">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Admin Dashboard -->
    <div id="adminDashboard" class="container hidden">
        <div class="dashboard">
            <div class="dashboard-header">
                <h1 class="dashboard-title">Admin Dashboard</h1>
                <div class="user-info">
                    <span>Welcome, <strong id="adminUsername"></strong></span>
                    <button class="logout-btn" onclick="logout()">Logout</button>
                </div>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="adminTotalVisitors">0</div>
                    <div class="stat-label">Total Visitors</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="adminTotalStaff">3</div>
                    <div class="stat-label">Total Staff</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="adminTotalSecurity">2</div>
                    <div class="stat-label">Security Personnel</div>
                </div>
            </div>

            <div class="section">
                <div class="section-title">Search & Filter</div>
                <div class="search-filters">
                    <input type="text" id="searchName" placeholder="Search by name...">
                    <input type="date" id="searchDate">
                    <select id="searchStatus">
                        <option value="">All Status</option>
                        <option value="expected">Expected</option>
                        <option value="checked-in">Checked In</option>
                        <option value="checked-out">Checked Out</option>
                    </select>
                    <button class="btn" onclick="filterVisitors()">Filter</button>
                    <button class="btn btn-secondary" onclick="clearFilters()">Clear</button>
                </div>
            </div>

            <div class="section">
                <div class="section-title">All Visitor Logs</div>
                <button class="btn btn-secondary" onclick="generateReport()">Generate Report</button>
                <table class="visitor-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Contact</th>
                            <th>Purpose</th>
                            <th>Staff</th>
                            <th>Date</th>
                            <th>Check-in</th>
                            <th>Check-out</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="adminVisitorList">
                    </tbody>
                </table>
            </div>

            <div class="section">
                <div class="section-title">User Management</div>
                <button class="btn" onclick="openModal('userModal')">Add User</button>
                <table class="visitor-table">
                    <thead>
                        <tr>
                            <th>Username</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="userList">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Register Visitor Modal -->
    <div id="registerModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('registerModal')">&times;</span>
            <h2>Register New Visitor</h2>
            <form id="registerForm">
                <div class="form-group">
                    <label for="visitorName">Visitor Name</label>
                    <input type="text" id="visitorName" required>
                </div>
                <div class="form-group">
                    <label for="visitorContact">Contact Number</label>
                    <input type="tel" id="visitorContact" required>
                </div>
                <div class="form-group">
                    <label for="visitorPurpose">Purpose of Visit</label>
                    <textarea id="visitorPurpose" rows="3" required></textarea>
                </div>
                <div class="form-group">
                    <label for="visitorDate">Expected Date</label>
                    <input type="date" id="visitorDate" required>
                </div>
                <div class="form-group">
                    <label for="visitorTime">Expected Time</label>
                    <input type="time" id="visitorTime" required>
                </div>
                <button type="submit" class="btn">Register Visitor</button>
            </form>
        </div>
    </div>

    <!-- Add User Modal -->
    <div id="userModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('userModal')">&times;</span>
            <h2>Add New User</h2>
            <form id="userForm">
                <div class="form-group">
                    <label for="newUsername">Username</label>
                    <input type="text" id="newUsername" required>
                </div>
                <div class="form-group">
                    <label for="newPassword">Password</label>
                    <input type="password" id="newPassword" required>
                </div>
                <div class="form-group">
                    <label for="newRole">Role</label>
                    <select id="newRole" required>
                        <option value="">Select Role</option>
                        <option value="staff">Staff</option>
                        <option value="security">Security</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
                <button type="submit" class="btn">Add User</button>
            </form>
        </div>
    </div>

    <script>
        // Data Storage
        let visitors = [];
        let users = [
            { username: 'staff1', password: 'pass123', role: 'staff', status: 'active' },
            { username: 'security1', password: 'pass123', role: 'security', status: 'active' },
            { username: 'admin1', password: 'pass123', role: 'admin', status: 'active' }
        ];
        let currentUser = null;
        let selectedRole = 'staff';
        let visitorIdCounter = 1001;

        // Login functionality
        function selectRole(role) {
            selectedRole = role;
            document.querySelectorAll('.role-btn').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            if (role === 'staff') {
                document.getElementById('staffLoginSection').classList.remove('hidden');
                document.getElementById('credentialLoginSection').classList.add('hidden');
            } else {
                document.getElementById('staffLoginSection').classList.add('hidden');
                document.getElementById('credentialLoginSection').classList.remove('hidden');
            }
        }

        // Staff form submission (no credentials required)
        document.getElementById('staffForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const staffName = document.getElementById('staffName').value;
            
            currentUser = { username: staffName, role: 'staff' };
            document.getElementById('loginScreen').classList.add('hidden');
            document.getElementById('staffUsername').textContent = staffName;
            document.getElementById('staffDashboard').classList.remove('hidden');
            loadStaffDashboard();
        });

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            const user = users.find(u => u.username === username && u.password === password && u.role === selectedRole);
            
            if (user) {
                currentUser = user;
                document.getElementById('loginScreen').classList.add('hidden');
                
                if (user.role === 'security') {
                    document.getElementById('securityUsername').textContent = username;
                    document.getElementById('securityDashboard').classList.remove('hidden');
                    loadSecurityDashboard();
                } else if (user.role === 'admin') {
                    document.getElementById('adminUsername').textContent = username;
                    document.getElementById('adminDashboard').classList.remove('hidden');
                    loadAdminDashboard();
                }
            } else {
                alert('Invalid credentials!');
            }
        });

        function logout() {
            currentUser = null;
            document.querySelectorAll('.container').forEach(el => el.classList.add('hidden'));
            document.getElementById('loginScreen').classList.remove('hidden');
            document.getElementById('loginForm').reset();
            document.getElementById('staffForm').reset();
            
            // Reset to staff selection by default
            selectRole('staff');
        }

        // Modal functions
        function openModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Staff Dashboard
        function loadStaffDashboard() {
            const staffVisitors = visitors.filter(v => v.staff === currentUser.username);
            const today = new Date().toISOString().split('T')[0];
            const todayVisitors = staffVisitors.filter(v => v.date === today);
            
            document.getElementById('totalExpected').textContent = todayVisitors.length;
            document.getElementById('checkedIn').textContent = todayVisitors.filter(v => v.status === 'checked-in').length;
            document.getElementById('checkedOut').textContent = todayVisitors.filter(v => v.status === 'checked-out').length;
            
            const tbody = document.getElementById('staffVisitorList');
            tbody.innerHTML = '';
            
            staffVisitors.forEach(visitor => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${visitor.id}</td>
                    <td>${visitor.name}</td>
                    <td>${visitor.contact}</td>
                    <td>${visitor.purpose}</td>
                    <td>${visitor.date} ${visitor.time}</td>
                    <td><span class="status-badge status-${visitor.status}">${visitor.status.replace('-', ' ')}</span></td>
                `;
                tbody.appendChild(row);
            });
        }

        document.getElementById('registerForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const visitor = {
                id: visitorIdCounter++,
                name: document.getElementById('visitorName').value,
                contact: document.getElementById('visitorContact').value,
                purpose: document.getElementById('visitorPurpose').value,
                date: document.getElementById('visitorDate').value,
                time: document.getElementById('visitorTime').value,
                staff: currentUser.username,
                status: 'expected',
                checkIn: null,
                checkOut: null
            };
            
            visitors.push(visitor);
            closeModal('registerModal');
            document.getElementById('registerForm').reset();
            loadStaffDashboard();
            alert('Visitor registered successfully!');
        });

        // Security Dashboard
        function loadSecurityDashboard() {
            const today = new Date().toISOString().split('T')[0];
            const todayVisitors = visitors.filter(v => v.date === today);
            
            document.getElementById('secTotalExpected').textContent = todayVisitors.length;
            document.getElementById('secCheckedIn').textContent = todayVisitors.filter(v => v.status === 'checked-in').length;
            document.getElementById('secCheckedOut').textContent = todayVisitors.filter(v => v.status === 'checked-out').length;
            
            const tbody = document.getElementById('securityVisitorList');
            tbody.innerHTML = '';
            
            todayVisitors.forEach(visitor => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${visitor.id}</td>
                    <td>${visitor.name}</td>
                    <td>${visitor.contact}</td>
                    <td>${visitor.purpose}</td>
                    <td>${visitor.staff}</td>
                    <td>${visitor.time}</td>
                    <td><span class="status-badge status-${visitor.status}">${visitor.status.replace('-', ' ')}</span></td>
                    <td>
                        ${visitor.status === 'expected' ? 
                            `<button class="action-btn btn-success" onclick="checkIn(${visitor.id})">Check In</button>` : 
                            visitor.status === 'checked-in' ? 
                            `<button class="action-btn btn-danger" onclick="checkOut(${visitor.id})">Check Out</button>` : 
                            'Completed'
                        }
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function checkIn(visitorId) {
            const visitor = visitors.find(v => v.id === visitorId);
            if (visitor) {
                visitor.status = 'checked-in';
                visitor.checkIn = new Date().toLocaleTimeString();
                loadSecurityDashboard();
                alert(`${visitor.name} checked in successfully!`);
            }
        }

        function checkOut(visitorId) {
            const visitor = visitors.find(v => v.id === visitorId);
            if (visitor) {
                visitor.status = 'checked-out';
                visitor.checkOut = new Date().toLocaleTimeString();
                loadSecurityDashboard();
                alert(`${visitor.name} checked out successfully!`);
            }
        }

        // Admin Dashboard
        function loadAdminDashboard() {
            document.getElementById('adminTotalVisitors').textContent = visitors.length;
            
            const tbody = document.getElementById('adminVisitorList');
            tbody.innerHTML = '';
            
            visitors.forEach(visitor => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${visitor.id}</td>
                    <td>${visitor.name}</td>
                    <td>${visitor.contact}</td>
                    <td>${visitor.purpose}</td>
                    <td>${visitor.staff}</td>
                    <td>${visitor.date}</td>
                    <td>${visitor.checkIn || '-'}</td>
                    <td>${visitor.checkOut || '-'}</td>
                    <td><span class="status-badge status-${visitor.status}">${visitor.status.replace('-', ' ')}</span></td>
                `;
                tbody.appendChild(row);
            });
            
            loadUserList();
        }

        function loadUserList() {
            const tbody = document.getElementById('userList');
            tbody.innerHTML = '';
            
            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.username}</td>
                    <td>${user.role}</td>
                    <td>${user.status}</td>
                    <td>
                        <button class="action-btn btn-danger" onclick="deleteUser('${user.username}')">Delete</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function filterVisitors() {
            const name = document.getElementById('searchName').value.toLowerCase();
            const date = document.getElementById('searchDate').value;
            const status = document.getElementById('searchStatus').value;
            
            let filteredVisitors = visitors;
            
            if (name) {
                filteredVisitors = filteredVisitors.filter(v => v.name.toLowerCase().includes(name));
            }
            
            if (date) {
                filteredVisitors = filteredVisitors.filter(v => v.date === date);
            }
            
            if (status) {
                filteredVisitors = filteredVisitors.filter(v => v.status === status);
            }
            
            const tbody = document.getElementById('adminVisitorList');
            tbody.innerHTML = '';
            
            filteredVisitors.forEach(visitor => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${visitor.id}</td>
                    <td>${visitor.name}</td>
                    <td>${visitor.contact}</td>
                    <td>${visitor.purpose}</td>
                    <td>${visitor.staff}</td>
                    <td>${visitor.date}</td>
                    <td>${visitor.checkIn || '-'}</td>
                    <td>${visitor.checkOut || '-'}</td>
                    <td><span class="status-badge status-${visitor.status}">${visitor.status.replace('-', ' ')}</span></td>
                `;
                tbody.appendChild(row);
            });
        }

        function clearFilters() {
            document.getElementById('searchName').value = '';
            document.getElementById('searchDate').value = '';
            document.getElementById('searchStatus').value = '';
            loadAdminDashboard();
        }

        function generateReport() {
            const csvContent = "data:text/csv;charset=utf-8," + 
                "ID,Name,Contact,Purpose,Staff,Date,Check-in,Check-out,Status\n" +
                visitors.map(v => `${v.id},${v.name},${v.contact},${v.purpose},${v.staff},${v.date},${v.checkIn || ''},${v.checkOut || ''},${v.status}`).join('\n');
            
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement('a');
            link.setAttribute('href', encodedUri);
            link.setAttribute('download', 'visitor_report.csv');
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        document.getElementById('userForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const username = document.getElementById('newUsername').value;
            const password = document.getElementById('newPassword').value;
            const role = document.getElementById('newRole').value;
            
            // Check if username already exists
            if (users.find(u => u.username === username)) {
                alert('Username already exists!');
                return;
            }
            
            const newUser = {
                username: username,
                password: password,
                role: role,
                status: 'active'
            };
            
            users.push(newUser);
            closeModal('userModal');
            document.getElementById('userForm').reset();
            loadUserList();
            alert('User added successfully!');
        });

        function deleteUser(username) {
            if (username === currentUser.username) {
                alert('Cannot delete your own account!');
                return;
            }
            
            if (confirm(`Are you sure you want to delete user: ${username}?`)) {
                const index = users.findIndex(u => u.username === username);
                if (index > -1) {
                    users.splice(index, 1);
                    loadUserList();
                    alert('User deleted successfully!');
                }
            }
        }

        // Set minimum date to today for visitor registration
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('visitorDate').min = today;
            document.getElementById('searchDate').max = new Date().toISOString().split('T')[0];
        });

        // Auto-refresh security dashboard every 30 seconds
        setInterval(function() {
            if (currentUser && currentUser.role === 'security' && !document.getElementById('securityDashboard').classList.contains('hidden')) {
                loadSecurityDashboard();
            }
        }, 30000);

        // Sample data for demonstration
        function loadSampleData() {
            const today = new Date().toISOString().split('T')[0];
            const yesterday = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0];
            
            visitors.push(
                {
                    id: visitorIdCounter++,
                    name: 'John Smith',
                    contact: '+1234567890',
                    purpose: 'Business Meeting',
                    date: today,
                    time: '10:00',
                    staff: 'staff1',
                    status: 'expected',
                    checkIn: null,
                    checkOut: null
                },
                {
                    id: visitorIdCounter++,
                    name: 'Sarah Johnson',
                    contact: '+1234567891',
                    purpose: 'Interview',
                    date: today,
                    time: '14:00',
                    staff: 'staff1',
                    status: 'checked-in',
                    checkIn: '14:05',
                    checkOut: null
                },
                {
                    id: visitorIdCounter++,
                    name: 'Mike Wilson',
                    contact: '+1234567892',
                    purpose: 'Delivery',
                    date: yesterday,
                    time: '09:00',
                    staff: 'staff1',
                    status: 'checked-out',
                    checkIn: '09:00',
                    checkOut: '09:30'
                }
            );
        }

        // Load sample data on page load
        loadSampleData();

        // Close modals when clicking outside
        window.addEventListener('click', function(event) {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // ESC to close modals
            if (e.key === 'Escape') {
                const modals = document.querySelectorAll('.modal');
                modals.forEach(modal => {
                    modal.style.display = 'none';
                });
            }
            
            // Ctrl+N to register new visitor (staff only)
            if (e.ctrlKey && e.key === 'n' && currentUser && currentUser.role === 'staff') {
                e.preventDefault();
                openModal('registerModal');
            }
        });

        // Real-time clock
        function updateClock() {
            const now = new Date();
            const timeString = now.toLocaleTimeString();
            const dateString = now.toLocaleDateString();
            
            // Add clock to dashboard headers if they exist
            const dashboards = ['staffDashboard', 'securityDashboard', 'adminDashboard'];
            dashboards.forEach(dashboardId => {
                const dashboard = document.getElementById(dashboardId);
                if (!dashboard.classList.contains('hidden')) {
                    const header = dashboard.querySelector('.dashboard-header .user-info');
                    if (header) {
                        let clockElement = header.querySelector('.clock');
                        if (!clockElement) {
                            clockElement = document.createElement('span');
                            clockElement.className = 'clock';
                            clockElement.style.marginRight = '15px';
                            clockElement.style.fontSize = '14px';
                            header.insertBefore(clockElement, header.firstChild);
                        }
                        clockElement.textContent = `${dateString} ${timeString}`;
                    }
                }
            });
        }

        // Update clock every second
        setInterval(updateClock, 1000);
        updateClock(); // Initial call

        // Enhanced search functionality
        function enhancedSearch() {
            const searchInputs = ['searchName', 'searchDate', 'searchStatus'];
            searchInputs.forEach(inputId => {
                const input = document.getElementById(inputId);
                if (input) {
                    input.addEventListener('input', filterVisitors);
                }
            });
        }

        // Initialize enhanced search when admin dashboard loads
        setTimeout(enhancedSearch, 1000);

        // Export functionality for different formats
        function exportData(format) {
            const data = visitors;
            
            if (format === 'json') {
                const jsonContent = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(data, null, 2));
                downloadFile(jsonContent, 'visitor_data.json');
            } else if (format === 'csv') {
                generateReport();
            }
        }

        function downloadFile(content, filename) {
            const link = document.createElement('a');
            link.setAttribute('href', content);
            link.setAttribute('download', filename);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Print functionality
        function printVisitorList() {
            const printWindow = window.open('', '_blank');
            const printContent = `
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Visitor Report</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 20px; }
                        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
                        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
                        th { background-color: #f2f2f2; }
                        .header { text-align: center; margin-bottom: 30px; }
                        .date { text-align: right; margin-bottom: 20px; }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <h1>Visitor Management System</h1>
                        <h2>Visitor Report</h2>
                    </div>
                    <div class="date">Generated: ${new Date().toLocaleString()}</div>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Contact</th>
                                <th>Purpose</th>
                                <th>Staff</th>
                                <th>Date</th>
                                <th>Check-in</th>
                                <th>Check-out</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${visitors.map(v => `
                                <tr>
                                    <td>${v.id}</td>
                                    <td>${v.name}</td>
                                    <td>${v.contact}</td>
                                    <td>${v.purpose}</td>
                                    <td>${v.staff}</td>
                                    <td>${v.date}</td>
                                    <td>${v.checkIn || '-'}</td>
                                    <td>${v.checkOut || '-'}</td>
                                    <td>${v.status}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </body>
                </html>
            `;
            
            printWindow.document.write(printContent);
            printWindow.document.close();
            printWindow.print();
        }

        // Add notification system
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 20px;
                background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};
                color: white;
                border-radius: 5px;
                z-index: 10000;
                font-weight: 600;
                box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                transform: translateX(100%);
                transition: transform 0.3s ease;
            `;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            // Remove after 3 seconds
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // Update alert calls to use new notification system
        const originalAlert = window.alert;
        window.customAlert = function(message) {
            showNotification(message, 'success');
        };

        console.log('Visitor Management System initialized successfully!');
        console.log('Default login credentials:');
        console.log('Staff: staff1 / pass123');
        console.log('Security: security1 / pass123');
        console.log('Admin: admin1 / pass123');
    </script>
</body>
</html>